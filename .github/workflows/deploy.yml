name: Deploy to RDP Servers

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: [self-hosted, windows, x64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup SSH key
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.RDP_DEPLOY_KEY }}

    - name: Deploy to RDP Host 1
      run: |
        echo "Preparing web.config for Host 1"
        cp web.config.rdp1 web.config

        echo "Deploying to RDP Host 1..."
        ssh -o StrictHostKeyChecking=no ${{ secrets.RDP_USER }}@${{ secrets.RDP_HOST_1 }} powershell -NoProfile -Command @"
          try {
            Write-Host '--- Starting deployment on Host 1 ---'

            cd 'E:\APP\Chronexa'

            Write-Host 'Resetting any local changes...'
            git reset --hard

            Write-Host 'Pulling latest code...'
            git pull origin main

            Write-Host 'Installing dependencies...'
            npm ci --force

            Write-Host 'Building project...'
            npm run build

            Write-Host 'Restarting IIS App Pool...'
            Import-Module WebAdministration
            Restart-WebAppPool 'chronexa'

            Write-Host '--- Deployment successful on Host 1 ---'
          } catch {
            Write-Host 'Deployment FAILED on Host 1'
            exit 1
          }
        "@

    - name: Deploy to RDP Host 2
      run: |
        echo "Preparing web.config for Host 2"
        cp web.config.rdp2 web.config

        echo "Deploying to RDP Host 2..."
        ssh -o StrictHostKeyChecking=no ${{ secrets.RDP_USER }}@${{ secrets.RDP_HOST_2 }} powershell -NoProfile -Command @"
          try {
            Write-Host '--- Starting deployment on Host 2 ---'

            cd 'E:\APP\Chronexa'

            Write-Host 'Resetting any local changes...'
            git reset --hard

            Write-Host 'Pulling latest code...'
            git pull origin main

            Write-Host 'Installing dependencies...'
            npm ci --force

            Write-Host 'Building project...'
            npm run build

            Write-Host 'Restarting IIS App Pool...'
            Import-Module WebAdministration
            Restart-WebAppPool 'chronexa'

            Write-Host '--- Deployment successful on Host 2 ---'
          } catch {
            Write-Host 'Deployment FAILED on Host 2'
            exit 1
          }
        "@